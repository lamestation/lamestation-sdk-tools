#!/usr/bin/env python

import os, sys
import argparse
import SpinFormatting as SF


MIDINOTES = 150
ROOTNOTE = 16.35159781250000000000 # C0


def pitch (F0, n):
    return F0*pow(2,(n/12.0))

parser = argparse.ArgumentParser(description='Generate frequency tables for use with LameStation audio modules.')
parser.add_argument('-c','--clkfreq', type=int, default=80000000, help='Propeller clock speed')
parser.add_argument('-p','--period', type=int, default=2000, help='PWM period')
parser.add_argument('-s','--samples', type=int, default=512, help='Number of frames in a sample')

args = parser.parse_args()

CLKFREQ = args.clkfreq
PERIOD = args.period
SAMPLES = args.samples
FS = CLKFREQ/PERIOD
FCmin = FS/SAMPLES

output = ""

output += SF.lineRule()
output += "' * frequency table\n"
output += SF.lineRule()
output += "'     Clkfreq: "+str(CLKFREQ)+"\n"
output += "'      Period: "+str(PERIOD)+"\n"
output += "'     Samples: "+str(SAMPLES)+"\n"
output += "' Sample Rate: "+str(FS)+" Hz\n"
output += "'       FCmin: "+str(FCmin)+" Hz\n"

output += "\nfreqTable\n"

realFrequency = []
incrementFrequency = []

for i in range(0,MIDINOTES):
    realFrequency.append(pitch(ROOTNOTE, i))
    incrementFrequency.append(int(pow(2.0,12.0)*realFrequency[i]/FCmin))

for i in range(0,MIDINOTES):
    if i % 12 == 0:
        output += "\nlong\t\t"
    output += str(incrementFrequency[i])
    if not i % 12 == 11:
        output += ", "

output += "\n"

f = open("freqtable.spin",'w')
print output
f.write(output)
f.close()
